record(bi, "$(P)$(R)test")
{
  field(DTYP, "asynUInt32Digital")
  field(INP,  "@asynMask($(PORT),$(ADDR),0x8000, $(TIMEOUT))DCM_STATUS")
  field(SCAN, "I/O Intr")
  field(ZNAM, "Off")
  field(ONAM, "On")
}

#
# MUX Settings for front panel
#

record(mbbo, "$(P)$(R)Mux1")
{
  field(DTYP, "asynInt32")
  field(PINI, "YES")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FCCD_MUX1")
  field(ZRST, "EXPOSE")
  field(ZRVL, "0")
  field(ONST, "VCLK1")
  field(ONVL, "1")
  field(TWST, "VCLK2")
  field(TWVL, "2")
  field(THST, "VCLK2")
  field(THVL, "3")
  field(FRST, "ATG")
  field(FRVL, "4")
  field(FVST, "VFSCLK1")
  field(FVVL, "5")
  field(SXST, "VFSCLK2")
  field(SXVL, "6")
  field(SVST, "VFSCLK3")
  field(SVVL, "7")
  field(EIST, "HCLK1")
  field(EIVL, "8")
  field(NIST, "HCLK2")
  field(NIVL, "9")
  field(TEST, "OSW")
  field(TEVL, "10")
  field(ELST, "RST")
  field(ELVL, "11")
  field(TVST, "CONVERT")
  field(TVVL, "12")
  field(TTST, "SHUTTER")
  field(TTVL, "13")
  field(FTST, "SWTRIGGER")
  field(FTVL, "14")
  field(FFST, "TRIGMON")
  field(FFVL, "15")
}

record(mbbi, "$(P)$(R)Mux1_RBV")
{
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FCCD_MUX1")
  field(ZRST, "EXPOSE")
  field(ZRVL, "0")
  field(ONST, "VCLK1")
  field(ONVL, "1")
  field(TWST, "VCLK2")
  field(TWVL, "2")
  field(THST, "VCLK2")
  field(THVL, "3")
  field(FRST, "ATG")
  field(FRVL, "4")
  field(FVST, "VFSCLK1")
  field(FVVL, "5")
  field(SXST, "VFSCLK2")
  field(SXVL, "6")
  field(SVST, "VFSCLK3")
  field(SVVL, "7")
  field(EIST, "HCLK1")
  field(EIVL, "8")
  field(NIST, "HCLK2")
  field(NIVL, "9")
  field(TEST, "OSW")
  field(TEVL, "10")
  field(ELST, "RST")
  field(ELVL, "11")
  field(TVST, "CONVERT")
  field(TVVL, "12")
  field(TTST, "SHUTTER")
  field(TTVL, "13")
  field(FTST, "SWTRIGGER")
  field(FTVL, "14")
  field(FFST, "TRIGMON")
  field(FFVL, "15")
  field(SCAN, "I/O Intr")
}

record(mbbo, "$(P)$(R)Mux2")
{
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FCCD_MUX2")
  field(PINI, "YES")
  field(ZRST, "EXPOSE")
  field(ZRVL, "0")
  field(ONST, "VCLK1")
  field(ONVL, "1")
  field(TWST, "VCLK2")
  field(TWVL, "2")
  field(THST, "VCLK2")
  field(THVL, "3")
  field(FRST, "ATG")
  field(FRVL, "4")
  field(FVST, "VFSCLK1")
  field(FVVL, "5")
  field(SXST, "VFSCLK2")
  field(SXVL, "6")
  field(SVST, "VFSCLK3")
  field(SVVL, "7")
  field(EIST, "HCLK1")
  field(EIVL, "8")
  field(NIST, "HCLK2")
  field(NIVL, "9")
  field(TEST, "HCLK3")
  field(TEVL, "10")
  field(ELST, "OSW")
  field(ELVL, "11")
  field(TVST, "RST")
  field(TVVL, "12")
  field(TTST, "CONVERT")
  field(TTVL, "13")
  field(FTST, "SAVE")
  field(FTVL, "14")
  field(FFST, "HWTRIG")
  field(FFVL, "15")
}

record(mbbi, "$(P)$(R)Mux2_RBV")
{
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FCCD_MUX2")
  field(SCAN, "I/O Intr")
  field(ZRST, "EXPOSE")
  field(ZRVL, "0")
  field(ONST, "VCLK1")
  field(ONVL, "1")
  field(TWST, "VCLK2")
  field(TWVL, "2")
  field(THST, "VCLK2")
  field(THVL, "3")
  field(FRST, "ATG")
  field(FRVL, "4")
  field(FVST, "VFSCLK1")
  field(FVVL, "5")
  field(SXST, "VFSCLK2")
  field(SXVL, "6")
  field(SVST, "VFSCLK3")
  field(SVVL, "7")
  field(EIST, "HCLK1")
  field(EIVL, "8")
  field(NIST, "HCLK2")
  field(NIVL, "9")
  field(TEST, "HCLK3")
  field(TEVL, "10")
  field(ELST, "OSW")
  field(ELVL, "11")
  field(TVST, "RST")
  field(TVVL, "12")
  field(TTST, "CONVERT")
  field(TTVL, "13")
  field(FTST, "SAVE")
  field(FTVL, "14")
  field(FFST, "HWTRIG")
  field(FFVL, "15")
}

#
# FPGA Status
#

record(bi, "$(P)$(R)FrameSts_RBV")
{
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FPGA_STATUS")
  field(SCAN, "I/O Intr")
  field(ZNAM, "Not Configured")
  field(ONAM, "Configured")
}

record(bi, "$(P)$(R)FPPwrSts_RBV")
{
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FPPWR_STATUS")
  field(SCAN, "I/O Intr")
  field(ZNAM, "Enabled")
  field(ONAM, "Locked Out")
}

#
# Power monitoring records
#

record(ai, "$(P)$(R)E:Bus12v-I")
{
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))VBUS_12V0")
  field(EGU,  "V")
  field(SCAN, "I/O Intr")
  field(PREC, "4")
}

record(ai, "$(P)$(R)I:Bus12v-I")
{
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))IBUS_12V0")
  field(EGU,  "A")
  field(SCAN, "I/O Intr")
  field(PREC, "4")
}

record(ai, "$(P)$(R)E:Mgmt3v3-I")
{
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))VMGMT_3V3")
  field(EGU,  "V")
  field(SCAN, "I/O Intr")
  field(PREC, "4")
}

record(ai, "$(P)$(R)I:Mgmt3v3-I")
{
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))IMGMT_3V3")
  field(EGU,  "A")
  field(SCAN, "I/O Intr")
  field(PREC, "4")
}
record(ai, "$(P)$(R)E:Mgmt2v5-I")
{
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))VMGMT_2V5")
  field(EGU,  "V")
  field(SCAN, "I/O Intr")
  field(PREC, "4")
}

record(ai, "$(P)$(R)I:Mgmt2v5-I")
{
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))IMGMT_2V5")
  field(EGU,  "A")
  field(SCAN, "I/O Intr")
  field(PREC, "4")
}
record(ai, "$(P)$(R)E:Mgmt1v2-I")
{
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))VMGMT_1V2")
  field(EGU,  "V")
  field(SCAN, "I/O Intr")
  field(PREC, "4")
}

record(ai, "$(P)$(R)I:Mgmt1v2-I")
{
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))IMGMT_1V2")
  field(EGU,  "A")
  field(SCAN, "I/O Intr")
  field(PREC, "4")
}
record(ai, "$(P)$(R)E:Enet-I")
{
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))VENET_1V0")
  field(EGU,  "V")
  field(SCAN, "I/O Intr")
  field(PREC, "4")
}

record(ai, "$(P)$(R)I:Enet-I")
{
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))IENET_1V0")
  field(EGU,  "A")
  field(SCAN, "I/O Intr")
  field(PREC, "4")
}
record(ai, "$(P)$(R)E:S3E-I")
{
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))VS3E_3v3")
  field(EGU,  "V")
  field(SCAN, "I/O Intr")
  field(PREC, "4")
}

record(ai, "$(P)$(R)I:S3E-I")
{
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))VS3E_3V3")
  field(EGU,  "A")
  field(SCAN, "I/O Intr")
  field(PREC, "4")
}
record(ai, "$(P)$(R)E:Gen3v3-I")
{
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))VGEN_3V3")
  field(EGU,  "V")
  field(SCAN, "I/O Intr")
  field(PREC, "4")
}

record(ai, "$(P)$(R)I:Gen3v3-I")
{
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))IGEN_3V3")
  field(EGU,  "A")
  field(SCAN, "I/O Intr")
  field(PREC, "4")
}
record(ai, "$(P)$(R)E:Gen2v5-I")
{
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))VGEN_2V5")
  field(EGU,  "V")
  field(SCAN, "I/O Intr")
  field(PREC, "4")
}

record(ai, "$(P)$(R)I:Gen2v5-I")
{
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))IGEN_2V5")
  field(EGU,  "A")
  field(SCAN, "I/O Intr")
  field(PREC, "4")
}
record(ai, "$(P)$(R)E:0v9-I")
{
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))V6_0V9")
  field(EGU,  "V")
  field(SCAN, "I/O Intr")
  field(PREC, "4")
}

record(ai, "$(P)$(R)I:0v9-I")
{
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))V6_0V9")
  field(EGU,  "A")
  field(SCAN, "I/O Intr")
  field(PREC, "4")
}
record(ai, "$(P)$(R)E:1v0-I")
{
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))V6_1V0")
  field(EGU,  "V")
  field(SCAN, "I/O Intr")
  field(PREC, "4")
}

record(ai, "$(P)$(R)I:1v0-I")
{
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))V6_1V0")
  field(EGU,  "A")
  field(SCAN, "I/O Intr")
  field(PREC, "4")
}
record(ai, "$(P)$(R)E:2v5-I")
{
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))V6_2V5")
  field(EGU,  "V")
  field(SCAN, "I/O Intr")
  field(PREC, "4")
}

record(ai, "$(P)$(R)I:2v5-I")
{
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))I6_2V5")
  field(EGU,  "A")
  field(SCAN, "I/O Intr")
  field(PREC, "4")
}
record(ai, "$(P)$(R)E:FP-I")
{
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))VFP")
  field(EGU,  "V")
  field(SCAN, "I/O Intr")
  field(PREC, "4")
}

record(ai, "$(P)$(R)I:FP-I")
{
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))IFP")
  field(EGU,  "A")
  field(SCAN, "I/O Intr")
  field(PREC, "4")
}

#
# FastCCD Trigger Modes
#

record(mbbo, "$(P)$(R)TriggerMode")
{
   field(ZRST, "Internal")
   field(ZRVL, "0")
   field(ONST, "External 1")
   field(ONVL, "1")
   field(TWST, "External 2")
   field(TWVL, "2")
   field(THST, "External 1+2")
   field(THVL, "3")
}

record(mbbi, "$(P)$(R)TriggerMode_RBV")
{
   field(ZRST, "Internal")
   field(ZRVL, "0")
   field(ONST, "External 1")
   field(ONVL, "1")
   field(TWST, "External 2")
   field(TWVL, "2")
   field(THST, "External 1+2")
   field(THVL, "3")
}

#
# Override records for the FastCCD
#

record(mbbo, "$(P)$(R)DataType")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DATA_TYPE")
   field(ZRST, "UInt16")
   field(ZRVL, "3")
   field(ONST, "")
   field(ONVL, "")
   field(TWST, "")
   field(TWVL, "")
   field(THST, "")
   field(THVL, "")
   field(FRST, "")
   field(FRVL, "")
   field(FVST, "")
   field(FVVL, "")
   field(SXST, "")
   field(SXVL, "")
   field(SVST, "")
   field(SVVL, "")
}

record(mbbi, "$(P)$(R)DataType_RBV")
{
   field(ZRST, "UInt16")
   field(ZRVL, "3")
   field(ONST, "")
   field(ONVL, "")
   field(TWST, "")
   field(TWVL, "")
   field(THST, "")
   field(THVL, "")
   field(FRST, "")
   field(FRVL, "")
   field(FVST, "")
   field(FVVL, "")
   field(SXST, "")
   field(SXVL, "")
   field(SVST, "")
   field(SVVL, "")
}

#
# Records for storing config files
#

record(waveform, "$(P)$(R)FirmwarePath")
{
  field(PINI, "YES")
  field(DTYP, "asynOctetWrite")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FIRMWARE_PATH")
  field(FTVL, "CHAR")
  field(NELM, "256")
}

record(waveform, "$(P)$(R)FirmwarePath_RBV")
{
  field(PINI, "YES")
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FIRMWARE_PATH")
  field(FTVL, "CHAR")
  field(NELM, "256")
  field(SCAN, "I/O Intr")
}

record(waveform, "$(P)$(R)BiasPath")
{
  field(PINI, "YES")
  field(DTYP, "asynOctetWrite")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BIAS_PATH")
  field(FTVL, "CHAR")
  field(NELM, "256")
}

record(waveform, "$(P)$(R)BiasPath_RBV")
{
  field(PINI, "YES")
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BIAS_PATH")
  field(FTVL, "CHAR")
  field(NELM, "256")
  field(SCAN, "I/O Intr")
}

record(waveform, "$(P)$(R)ClockPath")
{
  field(PINI, "YES")
  field(DTYP, "asynOctetWrite")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CLOCK_PATH")
  field(FTVL, "CHAR")
  field(NELM, "256")
}

record(waveform, "$(P)$(R)ClockPath_RBV")
{
  field(PINI, "YES")
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CLOCK_PATH")
  field(FTVL, "CHAR")
  field(NELM, "256")
  field(SCAN, "I/O Intr")
}

#
# IP Address and MAC Addr
#

record(waveform, "$(P)$(R)FrameIP")
{
  field(PINI, "YES")
  field(DTYP, "asynOctetWrite")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FRAME_IP")
  field(FTVL, "CHAR")
  field(NELM, "256")
}

record(waveform, "$(P)$(R)FrameIP_RBV")
{
  field(PINI, "YES")
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FRAME_IP")
  field(FTVL, "CHAR")
  field(NELM, "256")
  field(SCAN, "I/O Intr")
}

record(waveform, "$(P)$(R)FrameMAC")
{
  field(PINI, "YES")
  field(DTYP, "asynOctetWrite")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FRAME_MAC")
  field(FTVL, "CHAR")
  field(NELM, "256")
}

record(waveform, "$(P)$(R)FrameMAC_RBV")
{
  field(PINI, "YES")
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FRAME_MAC")
  field(FTVL, "CHAR")
  field(NELM, "256")
  field(SCAN, "I/O Intr")
}

record(waveform, "$(P)$(R)DataIP")
{
  field(PINI, "YES")
  field(DTYP, "asynOctetWrite")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DATA_IP")
  field(FTVL, "CHAR")
  field(NELM, "256")
}

record(waveform, "$(P)$(R)DataIP_RBV")
{
  field(PINI, "YES")
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DATA_IP")
  field(FTVL, "CHAR")
  field(NELM, "256")
  field(SCAN, "I/O Intr")
}

record(waveform, "$(P)$(R)DataMAC")
{
  field(PINI, "YES")
  field(DTYP, "asynOctetWrite")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DATA_MAC")
  field(FTVL, "CHAR")
  field(NELM, "256")
}

record(waveform, "$(P)$(R)DataMAC_RBV")
{
  field(PINI, "YES")
  field(DTYP, "asynOctetRead")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DATA_MAC")
  field(FTVL, "CHAR")
  field(NELM, "256")
  field(SCAN, "I/O Intr")
}

#
# Records for uploading files
#

record(busy, "$(P)$(R)FwUpload") {
   field(DTYP, "asynInt32")
   field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))FIRMWARE_UPLOAD")
   field(ZNAM, "Done")
   field(ONAM, "Uploading")
   field(VAL,  "0")
}

record(bi, "$(P)$(R)FwUpload_RBV") {
   field(DTYP, "asynInt32")
   field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))FIRMWARE_UPLOAD")
   field(ZNAM, "Done")
   field(ZSV,  "NO_ALARM")
   field(ONAM, "Uploading")
   field(OSV,  "MINOR")
   field(SCAN, "I/O Intr")
}

record(busy, "$(P)$(R)ClockUpload") {
   field(DTYP, "asynInt32")
   field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))CLOCK_UPLOAD")
   field(ZNAM, "Done")
   field(ONAM, "Uploading")
   field(VAL,  "0")
}

record(bi, "$(P)$(R)ClockUpload_RBV") {
   field(DTYP, "asynInt32")
   field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))CLOCK_UPLOAD")
   field(ZNAM, "Done")
   field(ZSV,  "NO_ALARM")
   field(ONAM, "Uploading")
   field(OSV,  "MINOR")
   field(SCAN, "I/O Intr")
}

#
# Records for power
#

record(bo, "$(P)$(R)Power")
{
  #field(PINI, "YES")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))CIN_POWER")
  field(ZNAM, "Off")
  field(ONAM, "On")
}

record(bi, "$(P)$(R)Power_RBV")
{
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CIN_POWER")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(OSV,  "NO_ALARM")
  field(ZSV,  "MINOR")
  field(SCAN, "I/O Intr")
}

#record(bo, "$(P)$(R)FPPower")
#{
#  field(DTYP, "asynInt32")
#  field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))FP_POWER")
#  field(ZNAM, "Off")
#  field(ONAM, "On")
#  #field(PINI, "YES")
#}
#
#record(bi, "$(P)$(R)FPPower_RBV")
#{
#  field(DTYP, "asynInt32")
#  field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FP_POWER")
#  field(ZNAM, "Off")
#  field(ONAM, "On")
#  field(OSV,  "NO_ALARM")
#  field(ZSV,  "MINOR")
#  field(SCAN, "I/O Intr")
#}

#
# Records in ADBase that do not apply to the fCCD
#

record(mbbo, "$(P)$(R)ColorMode")
{
    field(DISA, "1")
}
record(mbbi, "$(P)$(R)ColorMode_RBV")
{
    field(DISA, "1")
}
record(bo, "$(P)$(R)ReverseX")
{
    field(DISA, "1")
}
record(bi, "$(P)$(R)ReverseX_RBV")
{
    field(DISA, "1")
}
record(bo, "$(P)$(R)ReverseY")
{
    field(DISA, "1")
}
record(bi, "$(P)$(R)ReverseY_RBV")
{
    field(DISA, "1")
}
record(longout, "$(P)$(R)BinX")
{
    field(DISA, "1")
}

record(longin, "$(P)$(R)BinX_RBV")
{
    field(DISA, "1")
}

record(longout, "$(P)$(R)BinY")
{
    field(DISA, "1")
}

record(longin, "$(P)$(R)BinY_RBV")
{
    field(DISA, "1")
}

record(longout, "$(P)$(R)MinX")
{
    field(DISA, "1")
}

record(longin, "$(P)$(R)MinX_RBV")
{
    field(DISA, "1")
}

record(longout, "$(P)$(R)MinY")
{
    field(DISA, "1")
}

record(longin, "$(P)$(R)MinY_RBV")
{
    field(DISA, "1")
}

record(longout, "$(P)$(R)SizeX")
{
    field(DISA, "1")
}

record(longin, "$(P)$(R)SizeX_RBV")
{
    field(DISA, "1")
}

record(longout, "$(P)$(R)SizeY")
{
    field(DISA, "1")
}

record(longin, "$(P)$(R)SizeY_RBV")
{
    field(DISA, "1")
}

record(ao, "$(P)$(R)Gain")
{
    field(DISA, "1")
}

record(ai, "$(P)$(R)Gain_RBV")
{
    field(DISA, "1")
}

record(longin, "$(P)$(R)NumExposures_RBV")
{
    field(DISA, "1")
}

record(longin, "$(P)$(R)NumExposuresCounter_RBV")
{
    field(DISA, "1")
}
